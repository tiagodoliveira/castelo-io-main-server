spring.application.name=castelo-io-main-server

# Local DB connection:
spring.datasource.url=jdbc:postgresql://localhost:5432/castelo-io-database
spring.datasource.username=castelo-io
spring.datasource.password=password
spring.sql.init.mode=always
spring.datasource.generate-unique-name=false
spring.docker.compose.enabled=true

# Production DB connection:
#spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
#spring.datasource.username=${DB_USER}
#spring.datasource.password=${DB_PASSWORD}
#spring.sql.init.mode=never
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.hibernate.ddl-auto=update
#spring.docker.compose.enabled=false

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer=ERROR
spring.cloud.openfeign.client.config.default.logger-level=FULL
logging.level.io.castelo.main_server.client=DEBUG

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email

spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=user:email